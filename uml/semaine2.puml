 @startuml
'https://plantuml.com/sequence-diagram


'configuration du style
skinparam style strictuml
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold


class Game  {
	+ {static} main( args:String[] )
}

class Pokemon {
    - _name : String
    - _life : Integer
    - _attack : Integer
    + <<create>> Pokemon(name : String)
    + attackPokemon(pokemon : Pokemon)
    + getName() : String
    + getAffinity() : PokemonType
    + getLife() : Integer
    + getAttack() : Integer
}

enum PokemonType <<enum>>{
    AIR
    WATER
    EARTH
    FIRE
}
'On pourrait contenir cette énumération comme des "sous classes" de Pokemon'


abstract class Player <<abstract>>{
    + <<create>> Player()
    + choicePokemonBattlefield()
    + displayDecks() : String
    + hasLost() : Boolean
    + addPokemonToDiscard(pokemon : Pokemon)
    + displayHand() : String
    + getHand() : Hand
    + getDraw() : Draw
}

class User extends Player {
    + <<create>> User(draw : Draw, hand : Hand)
    + choicePokemonBattlefield()
    + displayHand() : String
}

class CPU extends Player {
    + <<create>> CPU(draw : Draw, hand : Hand)
    + choicePokemonBattlefield()
}

class Battlefield {
    + <<create>> Battlefield()
    + addPokemonToBattlefield(pokemon : Pokemon)
    + displaySimpleLineBattlefield(extrimity : char, stroke : char, lengthMinusTwo : Integer)
    + displayBattlefield() : String
    + chooseCurrentPokemon(pokemonName : String) : Pokemon
    + getPokemonBattlefieldList() : Pokemon[0..3]
}

class DisplayGame {
    - _currentTurnPlayer : Integer
    + displayGame() : String
    - displayRoundUserAttacker() : String
    - displayRoundCPUAttacker() : String
}

class Draw{
    +<<create>> Draw(nameList : String[])
    + deletePokemonOfDraw (pokemon : Pokemon)
    + getPokemonDraw() : Pokemon[0..21]
}

class Hand{
    +<<create>> Hand(NameList : String[])
    + addPokemonToHand (pokemon : Pokemon)
    + deletePokemonOfHand (pokemon : Pokemon)
    + getPokemonHand() : Pokemon[0..5]
}

class Power{
    - _id : Integer
    - _nbUsesLeft : Integer
    + <<create>> Power(id)
    + use(otherPokemon : Pokemon)
}

Player *-u-> "1\n # _battlefield" Battlefield : > has a
Player *-u-> "1\n # _pokemonDraw" Draw : > has a
Player *-d---> "*\n # _discard" Pokemon : > is composed of
Player *--> "1\n # _hand" Hand : > has a
Draw *--> "0..21\n # _pokemonDraw" Pokemon : > has a
Hand *--> "0..5\n # _pokemonHand" Pokemon : > has a
Battlefield *--> "0..3\n - _pokemonBattlefieldList" Pokemon : > is composed of
DisplayGame o--> "1\n - _user" User : > display
DisplayGame o--> "1\n - _cpu" CPU : > display
Pokemon *-l-> "1\n - _affinity" PokemonType : > has a type of

Game .d.> Player : <<uses>>
Game .d.> DisplayGame : <<uses>>
Game .d.> CPU : <<uses>>
Game .d.> User : <<uses>>


@enduml